/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Parameters from "../models/parameters";
import { MediaTypesV3Client } from "../mediaTypesV3Client";
import { BarApiPostSendOnDefaultOptionalParams } from "../models";

/**
 * Class representing a BarApi.
 */
export class BarApi {
  private readonly client: MediaTypesV3Client;

  /**
   * Initialize a new instance of the class BarApi class.
   * @param client Reference to the service client
   */
  constructor(client: MediaTypesV3Client) {
    this.client = client;
  }

  /**
   * Send payload to Foo service.
   * @param data simple string
   * @param options The options parameters.
   */
  postSendOnDefault(
    data: string,
    options?: BarApiPostSendOnDefaultOptionalParams
  ): Promise<coreHttp.RestResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { data, options: operationOptions },
      postSendOnDefaultOperationSpec
    ) as Promise<coreHttp.RestResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer({}, /* isXml */ false);

const postSendOnDefaultOperationSpec: coreHttp.OperationSpec = {
  path: "/bar/api/v1",
  httpMethod: "POST",
  responses: { 202: {}, 400: {} },
  requestBody: Parameters.data,
  queryParameters: [Parameters.excluded],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType],
  mediaType: "text",
  serializer
};
